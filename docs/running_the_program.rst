Running the Program
===================

ATMOS-BUD is designed to analyze the heat, vorticity, and humidity budgets of cyclones, offering three distinct frameworks for setting the analysis domain. Before running the program, ensure you have configured the ``namelist`` file in the ``inputs/namelist``. This file specifies the naming conventions for the variables contained in the NetCDF (``.nc``) file. Examples of ``namelist`` files for ERA5 data are provided, allowing users to copy and adapt them for their specific needs.

Positional Arguments
---------------------

- ``infile``: The input ``.nc`` file containing temperature, specific humidity, meridional, zonal, and vertical components of the wind, across pressure levels.

Optional Arguments
------------------

- ``-h, --help``: Display the help message and exit.
- ``-f, --fixed``: Compute energetics for a Fixed domain specified by the ``inputs/box_limits`` file.
- ``-t, --track``: Define the box using a track file specified by the ``inputs/track`` file. The track indicates the central point of the system, and an arbitrary box of 15째x15째 is constructed.
- ``-c, --choose``: For each time step, the user can interactively choose the domain by clicking on the displayed map.
- ``-g, --gfs``: Open multiple GFS files at once using the cfgrib engine.
- ``-o OUTNAME, --outname OUTNAME``: Choose a name for saving results (default is the same as infile).
- ``-v, --verbose``: Show debug messages while running.

Fixed Framework
---------------

The Fixed framework utilizes a specified domain to compute the budgets, defined within the ``inputs/box_limits`` file. This method is suitable for analyzing atmospheric systems with low displacement, such as convergence zones. To use this framework, users should refer to the example ``box_limits`` files available in the ``inputs`` directory and configure their own as needed.

To run ATMOS-BUD using the Fixed framework, execute the following command in the terminal:

.. code-block:: bash

    python atmos_bud.py -f

Ensure that the ``namelist`` and ``box_limits`` files are correctly set up in the ``inputs`` directory before running the command. This setup allows for the precise calculation of atmospheric budgets over the defined domain, with results stored in the ``ATMOS-BUD_Results`` directory and accompanying visualizations generated for analysis.

Semi-Lagrangian Framework
-------------------------

The Semi-Lagrangian framework in ATMOS-BUD is designed for dynamic analysis of moving atmospheric systems. It utilizes a ``inputs/track`` file, which contains information about the system's position (latitude and longitude) for given time steps. By default, a 15째x15째 box is constructed around the system's central position for the analysis. The ``track`` file may also include optional columns specifying the length and width of the desired box, allowing for customization of the domain size.

Track File Format
~~~~~~~~~~~~~~~~~

The track file should include the following columns at a minimum:

- Time (formatted as YYYYMMDDHH)
- Latitude (in degrees)
- Longitude (in degrees)

Optional columns for specifying the box dimensions include:

- Length (in degrees)
- Width (in degrees)

These additional parameters allow for greater flexibility in defining the analysis domain around the atmospheric system of interest.

Running the Program with the Semi-Lagrangian Framework
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To execute ATMOS-BUD using the Semi-Lagrangian framework, use the ``-t`` flag as follows:

.. code-block:: bash

    python atmos_bud.py -t

This command instructs ATMOS-BUD to dynamically adjust the analysis domain based on the system's position as defined in the ``inputs/track`` file.

Output
~~~~~~

Running the program in this framework generates a track file in the results directory (``ATMOS-BUD_Results``). This output file includes detailed tracking information for each time step, such as:

- System position (latitude and longitude)
- Box length and width
- Maximum/minimum vorticity, minimum geopotential height, and maximum wind speeds within the defined domain at the 850 hPa level

An example output file demonstrating this format can be found at ``inputs/track_output-example``. This file serves as a reference for understanding the structure and type of data generated by the Semi-Lagrangian framework.

Important Note on Track File Formatting
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

It is crucial for users to be familiar with the formatting requirements of the track file to ensure accurate analysis. Examples of properly formatted track files are provided in the ``inputs/`` directory. Users are encouraged to refer to these examples when preparing their track files for analysis with the Semi-Lagrangian framework. By adhering to the correct format, users can maximize the efficiency and accuracy of their atmospheric system analyses, ensuring that the domain of interest remains centered on the system throughout the analysis period.
